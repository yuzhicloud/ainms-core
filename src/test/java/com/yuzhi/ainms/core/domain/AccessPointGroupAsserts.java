package com.yuzhi.ainms.core.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AccessPointGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessPointGroupAllPropertiesEquals(AccessPointGroup expected, AccessPointGroup actual) {
        assertAccessPointGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertAccessPointGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessPointGroupAllUpdatablePropertiesEquals(AccessPointGroup expected, AccessPointGroup actual) {
        assertAccessPointGroupUpdatableFieldsEquals(expected, actual);
        assertAccessPointGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessPointGroupAutoGeneratedPropertiesEquals(AccessPointGroup expected, AccessPointGroup actual) {
        assertThat(expected)
            .as("Verify AccessPointGroup auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessPointGroupUpdatableFieldsEquals(AccessPointGroup expected, AccessPointGroup actual) {
        assertThat(expected)
            .as("Verify AccessPointGroup relevant properties")
            .satisfies(e -> assertThat(e.getApgId()).as("check apgId").isEqualTo(actual.getApgId()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessPointGroupUpdatableRelationshipsEquals(AccessPointGroup expected, AccessPointGroup actual) {
        assertThat(expected)
            .as("Verify AccessPointGroup relationships")
            .satisfies(e -> assertThat(e.getPowerPlant()).as("check powerPlant").isEqualTo(actual.getPowerPlant()))
            .satisfies(e -> assertThat(e.getAccessPoints()).as("check accessPoints").isEqualTo(actual.getAccessPoints()))
            .satisfies(e -> assertThat(e.getController()).as("check controller").isEqualTo(actual.getController()));
    }
}
