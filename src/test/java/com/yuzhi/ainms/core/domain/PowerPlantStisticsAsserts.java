package com.yuzhi.ainms.core.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PowerPlantStisticsAsserts {

  /**
   * Asserts that the entity has all properties (fields/relationships) set.
   *
   * @param expected the expected entity
   * @param actual the actual entity
   */
  public static void assertPowerPlantStisticsAllPropertiesEquals(
    PowerPlantStistics expected,
    PowerPlantStistics actual
  ) {
    assertPowerPlantStisticsAutoGeneratedPropertiesEquals(expected, actual);
    assertPowerPlantStisticsAllUpdatablePropertiesEquals(expected, actual);
  }

  /**
   * Asserts that the entity has all updatable properties (fields/relationships) set.
   *
   * @param expected the expected entity
   * @param actual the actual entity
   */
  public static void assertPowerPlantStisticsAllUpdatablePropertiesEquals(
    PowerPlantStistics expected,
    PowerPlantStistics actual
  ) {
    assertPowerPlantStisticsUpdatableFieldsEquals(expected, actual);
    assertPowerPlantStisticsUpdatableRelationshipsEquals(expected, actual);
  }

  /**
   * Asserts that the entity has all the auto generated properties (fields/relationships) set.
   *
   * @param expected the expected entity
   * @param actual the actual entity
   */
  public static void assertPowerPlantStisticsAutoGeneratedPropertiesEquals(
    PowerPlantStistics expected,
    PowerPlantStistics actual
  ) {
    assertThat(expected)
      .as("Verify PowerPlantStistics auto generated properties")
      .satisfies(
        e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId())
      );
  }

  /**
   * Asserts that the entity has all the updatable fields set.
   *
   * @param expected the expected entity
   * @param actual the actual entity
   */
  public static void assertPowerPlantStisticsUpdatableFieldsEquals(
    PowerPlantStistics expected,
    PowerPlantStistics actual
  ) {
    assertThat(expected)
      .as("Verify PowerPlantStistics relevant properties")
      .satisfies(
        e ->
          assertThat(e.getName()).as("check name").isEqualTo(actual.getName())
      )
      .satisfies(
        e ->
          assertThat(e.getTotalCount())
            .as("check totalCount")
            .isEqualTo(actual.getTotalCount())
      )
      .satisfies(
        e ->
          assertThat(e.getOnlineCount())
            .as("check onlineCount")
            .isEqualTo(actual.getOnlineCount())
      )
      .satisfies(
        e ->
          assertThat(e.getOfflineCount())
            .as("check offlineCount")
            .isEqualTo(actual.getOfflineCount())
      )
      .satisfies(
        e ->
          assertThat(e.getOtherCount())
            .as("check otherCount")
            .isEqualTo(actual.getOtherCount())
      )
      .satisfies(
        e ->
          assertThat(e.getStatisticDate())
            .as("check statisticDate")
            .isEqualTo(actual.getStatisticDate())
      )
      .satisfies(
        e ->
          assertThat(e.getStatisticTime())
            .as("check statisticTime")
            .isEqualTo(actual.getStatisticTime())
      );
  }

  /**
   * Asserts that the entity has all the updatable relationships set.
   *
   * @param expected the expected entity
   * @param actual the actual entity
   */
  public static void assertPowerPlantStisticsUpdatableRelationshipsEquals(
    PowerPlantStistics expected,
    PowerPlantStistics actual
  ) {
    assertThat(expected)
      .as("Verify PowerPlantStistics relationships")
      .satisfies(
        e ->
          assertThat(e.getProvince())
            .as("check province")
            .isEqualTo(actual.getProvince())
      );
  }
}
